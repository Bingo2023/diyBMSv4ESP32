#ifndef DIYBMSWebServer_H_
#define DIYBMSWebServer_H_

#include <stdio.h>

#include <esp_http_server.h>

#include <WiFi.h>

#include "settings.h"
#include "FS.h"
#include <LITTLEFS.h>
#include "SD.h"
#include <SPIFFS.h>
#include "time.h"
#include "defines.h"
#include "Rules.h"
#include "settings.h"
#include "ArduinoJson.h"
#include "PacketRequestGenerator.h"
#include "PacketReceiveProcessor.h"

#include "EmbeddedFiles_AutoGenerated.h"
//#include "EmbeddedFiles_Integrity.h"
#include "HAL_ESP32.h"

int printBoolean(char *buffer, size_t bufferLen,const char *fieldName, boolean value, boolean addComma);
int printBoolean(char *buffer, size_t bufferLen, const char *fieldName, boolean value);
esp_err_t SendSuccess(httpd_req_t *req);
void setCookieValue();
void setCookie(httpd_req_t *req);
void generateUUID();
void StartServer(diybms_eeprom_settings *mysettings,
                 fs::SDFS *sdcard,
                 PacketRequestGenerator *prg,
                 PacketReceiveProcessor *pktreceiveproc,
                 ControllerState *controlState,
                 Rules *rules,
                 void (*sdcardaction_callback)(uint8_t action),
                 HAL_ESP32 *hal);
void clearModuleValues(uint8_t module);

httpd_handle_t start_webserver(void);
void stop_webserver(httpd_handle_t server);
String uuidToString(uint8_t *uuidLocation);

boolean validateXSS(httpd_req_t *req);

//These are borrowed from the new ESP IDF framework, will need to be removed if framework is upgraded
esp_err_t httpd_req_get_cookie_val(httpd_req_t *req, const char *cookie_name, char *val, size_t *val_size);
esp_err_t httpd_cookie_key_value(const char *cookie_str, const char *key, char *val, size_t *val_size);

// TODO: Remove this
extern bool _sd_card_installed;
extern TaskHandle_t avrprog_task_handle;
extern avrprogramsettings _avrsettings;
extern RelayState previousRelayState[RELAY_TOTAL];
extern currentmonitoring_struct currentMonitor;


extern void ConfigureRS485();
extern void CurrentMonitorSetBasicSettings(uint16_t shuntmv, uint16_t shuntmaxcur, uint16_t batterycapacity, float fullchargevolt, float tailcurrent, float chargeefficiency);
extern void CurrentMonitorSetAdvancedSettings(currentmonitoring_struct newvalues);
extern void CurrentMonitorSetRelaySettings(currentmonitoring_struct newvalues);

extern char httpbuf[BUFSIZE];

#endif